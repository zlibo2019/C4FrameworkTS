{"version":3,"file":"C4Logger.js","sourceRoot":"","sources":["../src/C4Logger.ts"],"names":[],"mappings":"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","sourcesContent":["import Winston          = require('winston');\nimport C4LoggerOptions  = require('./C4LoggerOptions');\nimport C4LogLevel       = require('./C4LogLevels');\n\nimport { C4Log2ConsoleTransport}    from \"./C4Log2ConsoleTransport\";\nimport { C4Log2FilesTransport }     from \"./C4Log2FilesTransport\";\nimport { C4Log2RedisTransport }     from \"./C4Log2RedisTransport\";\n\nimport C4LogTransportInstance from './C4LogTransportInstance';\n\nexport class C4Logger {\n    private m_Logger        : Winston.LoggerInstance | null;\n    private m_Transports    : { [key:string] : C4LogTransportInstance}\n\n    constructor() {\n        this.m_Logger       = null;\n        this.m_Transports   = {};\n    }\n\n    /**\n     * 初始化Logger\n     * @param LogConfig Logger配置\n     */\n    async init(LogConfig : C4LoggerOptions.C4LoggerConfig) {\n        this.m_Logger   = new Winston.Logger({\n            name : 'C4Logger',\n            levels  : C4LogLevel.C4LogLevels.levels,\n            transports : [],\n            exitOnError : function(err) {\n                console.log(err);\n                return false;\n            }\n        });\n        Winston.addColors(C4LogLevel.C4LogLevels.colors);\n        if (LogConfig.defaultLoggers !== null\n            && LogConfig.defaultLoggers !== undefined\n            && Object.prototype.toString.call(LogConfig.defaultLoggers) === '[object Array]'\n            && LogConfig.defaultLoggers.length > 0) {\n            for (let i = 0; i < LogConfig.defaultLoggers.length; i++) {\n                this.addTransport(LogConfig.defaultLoggers[i]);\n            }\n        }\n\n        if (LogConfig.customLoggers !== null\n            && LogConfig.customLoggers !== undefined\n            && Object.prototype.toString.call(LogConfig.customLoggers) === '[object Array]'\n            && LogConfig.customLoggers.length > 0) {\n            for (let i = 0; i < LogConfig.customLoggers.length; i++) {\n                this.addTransport(LogConfig.customLoggers[i]);\n            }\n        }\n    }\n\n    /**\n     * 添加Logger配置\n     * @param LogConfig logger配置\n     */\n    async addTransport(LogConfig : C4LoggerOptions.C4LoggerOptions) {\n        if (null === this.m_Logger) {\n            return;\n        }\n        if ((LogConfig.logtype && LogConfig.logtype === 'console')\n            || LogConfig.name === 'default-console-logger'\n        ) {\n            let CurConsoleConfig : C4LoggerOptions.ConsoleLoggerOptions = \n                <C4LoggerOptions.ConsoleLoggerOptions> LogConfig;\n            let CurTransport = new C4Log2ConsoleTransport();\n            await CurTransport.init(CurConsoleConfig);\n\n            this.m_Logger.add(<Winston.TransportInstance>CurTransport.getTransport(), {}, true);\n            this.m_Transports[LogConfig.name] = CurTransport;\n        } else if (LogConfig.logtype === 'files') {\n            let CurFilesConfig : C4LoggerOptions.FileLoggerOptions = \n                <C4LoggerOptions.FileLoggerOptions> LogConfig;\n            let CurTransport   = new C4Log2FilesTransport();\n            await CurTransport.init(CurFilesConfig);\n\n            this.m_Logger.add(<Winston.TransportInstance>CurTransport.getTransport(), {}, true);\n            this.m_Transports[LogConfig.name] = CurTransport;\n        } else if (LogConfig.logtype === 'redis') {\n            let CurRedisConfig : C4LoggerOptions.RedisLoggerOptions = \n                <C4LoggerOptions.RedisLoggerOptions> LogConfig;\n            let CurTransport   = new C4Log2RedisTransport();\n            await CurTransport.init(CurRedisConfig);\n\n            this.m_Logger.add(<Winston.TransportInstance>CurTransport.getTransport(), {}, true);\n            this.m_Transports[LogConfig.name] = CurTransport;\n        }\n    }\n\n    /**\n     * 移除Logger配置\n     * @param LoggerName logger名\n     */\n    async removeTransport(LoggerName : string) {\n        if (null === this.m_Logger) {\n            return;\n        }\n\n        this.m_Logger.remove(LoggerName);\n        if (this.m_Transports[LoggerName]) {\n            delete this.m_Transports[LoggerName];\n        }\n    }\n\n    /**\n     * \b改变日志级别\n     * @param Level 级别\n     * @param LoggerName logger名\n     */\n    changeLevel(Level : C4LogLevel.C4LogLevel) : void;\n    changeLevel(Level : C4LogLevel.C4LogLevel, LoggerName?: string) : void {\n        if (LoggerName !== null\n            || LoggerName !== undefined\n            || (typeof LoggerName !== 'string')\n            || LoggerName === '') {\n            if (null !== this.m_Logger) {\n                this.m_Logger.level = Level;\n            }\n        } else {\n            \n            if (null !== this.m_Logger) {\n                let CurTrans = this.m_Logger.transports[LoggerName];\n                CurTrans.level  = Level;\n            }\n        }\n    }\n\n    /**\n     * 关闭Logger\n     * @param LoggerName logger名\n     */\n    async close(LoggerName ?: string) {\n        if (null !== this.m_Logger) {\n            if (LoggerName !== null\n            || LoggerName !== undefined\n            || (typeof LoggerName !== 'string')\n            || LoggerName === '') {\n                for (let key in this.m_Transports) {\n                    if (this.m_Transports[key]) {\n                        this.m_Logger.remove(<Winston.TransportInstance>this.m_Transports[key].getTransport());\n                        await this.m_Transports[key].close();\n                        delete this.m_Transports[key];\n                    }\n                }\n            } else {\n                let CurTransport    = this.m_Transports[LoggerName];\n                if (CurTransport) {\n                    this.m_Logger.remove(<Winston.TransportInstance>CurTransport.getTransport());\n                    await CurTransport.close();\n                    delete this.m_Transports[LoggerName];\n                }\n            }\n        }\n    }\n\n    fatal(msg : any, ...meta : any[]) : C4Logger {\n        if (this.m_Logger) {\n            if (msg && (typeof msg) !== \"string\" && msg.message && msg.stack) {\n                msg = Object.assign({\n                    message : msg.message,\n                    stack : msg.stack\n                }, msg);\n                msg = JSON.stringify(msg, null, 4).split('\\\\n').join('\"\\n    \"');\n            }\n            this.m_Logger.log('fatal', msg, ...meta);\n        }\n\n        return this;\n    }\n\n    err(msg : any, ...meta : any[]) : C4Logger {\n        if (this.m_Logger) {\n            if (msg && (typeof msg) !== \"string\" && msg.message && msg.stack) {\n                msg = Object.assign({\n                    message : msg.message,\n                    stack : msg.stack\n                }, msg);\n                msg = JSON.stringify(msg, null, 4).split('\\\\n').join('\"\\n    \"');\n            }\n            this.m_Logger.log('err', msg.toString(), ...meta);\n        }\n\n        return this;\n    }\n\n    warn(msg : any, ...meta : any[]) : C4Logger {\n        if (this.m_Logger) {\n            if (msg && (typeof msg) !== \"string\" && msg.message && msg.stack) {\n                msg = Object.assign({\n                    message : msg.message,\n                    stack : msg.stack\n                }, msg);\n                msg = JSON.stringify(msg, null, 4).split('\\\\n').join('\"\\n    \"');\n            }\n            this.m_Logger.log('warn', msg, ...meta);\n        }\n\n        return this;\n    }\n\n    info(msg : any, ...meta : any[]) : C4Logger {\n        if (this.m_Logger) {\n            if (msg && (typeof msg) !== \"string\" && msg.message && msg.stack) {\n                msg = Object.assign({\n                    message : msg.message,\n                    stack : msg.stack\n                }, msg);\n                msg = JSON.stringify(msg, null, 4).split('\\\\n').join('\"\\n    \"');\n            }\n            this.m_Logger.log('info', msg, ...meta);\n        }\n\n        return this;\n    }\n\n    debug(msg : any, ...meta : any[]) : C4Logger {\n        if (this.m_Logger) {\n            if (msg && (typeof msg) !== \"string\" && msg.message && msg.stack) {\n                msg = Object.assign({\n                    message : msg.message,\n                    stack : msg.stack\n                }, msg);\n                msg = JSON.stringify(msg, null, 4).split('\\\\n').join('\"\\n    \"');\n            }\n            this.m_Logger.log('debug', msg, ...meta);\n        }\n\n        return this;\n    }\n\n    trace(msg : any, ...meta : any[]) : C4Logger {\n        if (this.m_Logger) {\n            if (msg && (typeof msg) !== \"string\" && msg.message && msg.stack) {\n                msg = Object.assign({\n                    message : msg.message,\n                    stack : msg.stack\n                }, msg);\n                msg = JSON.stringify(msg, null, 4).split('\\\\n').join('\"\\n    \"');\n            }\n            this.m_Logger.log('trace', msg, ...meta);\n        }\n\n        return this;\n    }\n\n    /**\n     * 进行性能统计\n     * @param id 标识\n     * @param meta meta信息\n     */\n    profile(id : string, ...meta : any[]) : C4Logger {\n        if (this.m_Logger) {\n            this.m_Logger.profile(id, ...meta);\n        }\n\n        return this;\n    }\n}\n\n"]}