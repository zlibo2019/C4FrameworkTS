{"version":3,"file":"C4LoggerOptions.js","sourceRoot":"","sources":["../src/C4LoggerOptions.ts"],"names":[],"mappings":";;AAWC,CAAC","sourcesContent":["import Redis =  require('ioredis');\n\nexport interface GenericOptions {\n    logtype ?: 'files' | 'redis' | 'console';\n    level    : string | 'fatal' | 'err' | 'warn' | 'info' | 'debug' | 'trace';\n    silent  ?: boolean;\n    raw     ?: boolean;\n    name     : string;\n    handleExceptions   ?: boolean;\n    exceptionsLevel    ?: string;\n    humanReadableUnhandledException ?: boolean;\n};\n\nexport interface GenericTextOptions {\n    json        ?: boolean;\n    colorize    ?: boolean;\n    colors      ?: any;\n    prettyPrint ?: boolean;\n    showLevel   ?: boolean;\n    label       : string;\n    depth       ?: number;\n\n    timestamp   ?: boolean | (() => string | boolean);\n    stringify?(obj : any) : string;\n}\n\nexport interface ConsoleLoggerOptions extends GenericOptions, GenericTextOptions {\n    logstash    ?: boolean;\n    debugStdout ?: boolean;\n}\n\nexport interface FileLoggerOptions extends GenericOptions, GenericTextOptions {\n    logstash       ?: boolean;\n    maxsize         : number;\n    rotationFormat ?: boolean;\n    zippedArchive  ?: boolean;\n    maxfiles        : number;\n    eol            ?: string;\n    tailable       ?: boolean;\n    maxRetries     ?: number;\n    filename        : string;\n    dirname        ?: string;\n    options        ?: {\n        flags           : string;\n        highWaterMark   : number;\n    }\n\n    stream ?: NodeJS.WritableStream | null;\n}\n\nexport interface RedisLoggerOptions extends GenericOptions, GenericTextOptions {\n    host        : string | 'localhost';\n    port        : number | 6379;\n    auth       ?: string;\n    redis      ?: Redis.Redis;\n    length     ?: number | 200;\n    container   : string;\n    channel    ?: string;\n    pattern    ?: string;\n    logstash   ?: boolean | false;\n}\n\nexport type C4LoggerOptions = FileLoggerOptions | ConsoleLoggerOptions | RedisLoggerOptions\n    | GenericOptions;\n\n// export interface CustomFilesLoggerOptions extends FileLoggerOptions {\n//     logtype : 'files' | string;\n// }\n\n// export interface CurstomRedisLoggerOptions extends RedisLoggerOptions {\n//     logtype : 'redis' | string;\n// }\n\n// export interface CurstomConsoleLoggerOptions extends ConsoleLoggerOptions {\n//     logtype : 'console'| string;\n// }\n\n// export type C4CustomLoggerOptions = CustomFilesLoggerOptions | CurstomRedisLoggerOptions | CurstomConsoleLoggerOptions;\n\nexport interface C4LoggerConfig {\n    defaultLoggers ?: C4LoggerOptions[];\n    customLoggers ?: C4LoggerOptions[]\n}\n\n"]}